MAX TODO'S LISTS

Phase 1 - Add TMDB

* Remove All Cross Refs extra tables, only two cross ref tables for all providers (Anime, Episodes)... Cross AniDB ID<->ProviderID or AniDB Episode ID<->ProviderEpisodeID - Done.
* Refactor solution for above - 90%
* Create TMDB Provider & models to fully support TMDB - 10%
* Migrate old Cross Refs Tables into One. (MySQL, SQLITE, SQLSERVER migrations) . - 0%
* Merge changes from main. 0%
* Consumer clients refactor if needed. (Web App, Shoko Desktop, etc). 40%


Objective: Shoko Server with full TMDB Provider.


Phase 2 - Decouple Providers from Shoko Server.

Currently, providers are heavily coupled with Shoko. The objective is decoupling them. The only exception from this Phase is AniDB.

Providers should get Database Connections, configuration, etc. from DI.
Providers should be able to cache and store their data, using the database connection IE: TvDB_Series, TvDB_Episodes. etc.
The structure of the repositories and others should remain almost the same and map to the same tables in the database, but the owner of those repositories and related methods will be moved from Shoko to the provider itself.
Specifically, repositories for the providers, including AniDB, should not have any relationship with keys generated in Shoko. IE: AnimeID in AniDB_Anime Shoko should be removed.
Additional useless Autogenerated PrimaryKeys will be removed from providers, and using the own provider primary keys.

Objective: Decupling, improving maintainability, removing the monolith approach, and getting the code ready for the next phases.


Phase 3 - Image storage

Providers should only use one Image storage service.
Image storage should be intelligent enough to only maintain the better quality or (config-related) version of the same image. (Perceptual Image Hashing), without user intervention.
ImageStorage facility should be DI to the provider.

Objective: Centralized storage for image caching, reusable by all clients.


Phase 4 - Create a new plugin architecture and interface including AniDB.

TBD